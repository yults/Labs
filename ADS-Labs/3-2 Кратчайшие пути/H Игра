#include <iostream>
#include <vector>
#include <stack>
#include <algorithm>
#include <fstream>

using namespace std;

vector<bool> vis, a;
vector<int> d;
vector<vector<int> > E;
void dfs(int u)
{
    if (vis[u]) return;
    vis[u] = true;
    for (int i = 0; i < E[u].size(); i++)
        dfs(E[u][i]);
    d.push_back(u);
}

int main()
{
    ifstream cin ("game.in");
	ofstream cout ("game.out");
    int n, m, s;
    cin >> n >> m >> s;
    s--;
    vis.resize(n);
    a.resize(n);
    E.resize(n);
    for (int i = 0; i < m; i++)
    {
        int u, v;
        cin >> u >> v;
        u--; v--;
        E[u].push_back(v);
    }
    dfs(s);
    for (int i = 0; i < d.size(); i++)
    {
        int u = d[i];
        for (int j = 0; j < E[u].size(); j++)
        {
            int v = E[u][j];
            if (a[u] || ! a[v]) a[u] = true;
            else a[u] = false;
        }
    }
    if (a[s]) cout << "First ";
    else cout << "Second ";
    cout << "player wins";
    return 0;
}
