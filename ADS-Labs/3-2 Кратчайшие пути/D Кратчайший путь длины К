#include <iostream>
#include <vector>
#include <stack>
#include <algorithm>

using namespace std;

struct e
{
    int u, v;
};

int main()
{
    int n, m, k, s;
    cin >> n >> m >> k >> s;
    vector<vector<e> > E(n);
    k++; s--;
    vector<vector<int> > dst(n, vector<int>(k, 1000000));
    dst[s][0] = 0;
    k--;
    for (int i = 0; i < m; i++)
    {
        int u, v, z;
        cin >> u >> v >> z;
        u--; v--;
        E[v].push_back({u, z});
    }
    for (int i = 0; i < k; i++)
        for (int j = 0; j < n; j++)
            for (int q = 0; q < E[j].size(); q++)
                {
                    int u = E[j][q].u;
                    int v = E[j][q].v;
                    if (dst[u][i] == 1000000) continue;
                    dst[j][i + 1] = min(dst[j][i + 1], dst[u][i] + v);
                }
    for (int i = 0; i < n; i++)
        if (dst[i][k] == 1000000) cout << -1 << endl;
        else cout << dst[i][k] << endl;
    return 0;
}
