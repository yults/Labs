#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <cmath>
 
using namespace std;
 
long long m, k, z;
vector <long long> p, pr, q, qr;
const long long ml = 104857601;
 
 
int main()
{
    cin >> k >> m;
    for (long long i = 0; i < k; i++)
    {
        long long x;
        cin >> x;
        p.push_back(x);
    }
    for (int i = 0; i < k; i++)
        p.push_back(0);
    q.push_back(1);
    for (long long i = 0; i < k; i++)
    {
        long long x;
        cin >> x;
        q.push_back((-x + ml) % ml);
    }
    long long m1 = m - 1;
    while(m1 >= k)
    {
        for (long long i = k; i < p.size(); i++)
        {
            p[i] = 0;
            for (long long j = 1; j < q.size(); j++)
            {
                p[i] = (p[i] - q[j]*p[i - j])%ml;
                if (p[i] < 0)
                    p[i] += ml;
                if (p[i] < 0)
                    p[i] += ml;
                if (p[i] < 0)
                    p[i] += ml;
            }
        }
        qr.resize(0);
        pr.resize(0);
        for (long long i = 0; i < q.size(); i++)
            if (i % 2 != 0)
                qr.push_back((-q[i] + ml) % ml);
            else
                qr.push_back(q[i]);
        for (long long i = 0; i <= 2 * k; i+=2)
        {
            long long s = 0;
            for (long long j = 0; j <=i; j++)
            {
                long long x = 0, y = 0;
                if (j <= k)
                    x = q[j];
                if (i - j <= k)
                    y = qr[i - j];
                s = ((s + x * y + ml) % ml);
            }
            pr.push_back(s);
        }
        q = pr;
        z = 0;
        for (long long i = 0; i < p.size(); i++)
        {
            if (i % 2 == m1 % 2)
            {
                p[z] = p[i];
                z++;
            }
        }
        m1 = m1 / 2;
    }
    cout << p[m1];
}
